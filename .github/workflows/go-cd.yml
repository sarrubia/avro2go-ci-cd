name: go-cd
on:
  push:
    branches:
      - main
    paths:
      - 'src/avro/schemas/**'

jobs:
  build:
    name: Genereate Go Models
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Autogenerate version
        run: make version FILENAME=version.properties GITHUB_RUN_ID=${{ github.run_id }}

      - name: Checking version
        run: sh go/cmd/checkTag.sh version.properties

      - name: Run avro2go
        run: ./go/cmd/avro2go -input-dir="src/avro/schemas" -output-dir="go/models"

      - name: Version from properties
        id: tag_version
        run: echo "::set-output name=number::$(./go/cmd/goProperties -file='version.properties' -key='version')"

      - name: Write Changelog
        run: |
          echo "## v${{ steps.tag_version.outputs.number }}" >> CHANGES.md

      - name: Fetch modified files
        id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'csv'
      - run: |
          mapfile -d ',' -t added_files < <(printf '%s,' '${{ steps.files.outputs.added }}')
          if [ "${#added_files[@]}" -gt "0" ]
          then
            ADDED_BLOCK="#### Added\n"
            for added_file in "${added_files[@]}"; do
              ADDED_BLOCK+="- ${added_file}\n"
            done
            ADDED_BLOCK+="\n"
            echo $ADDED_BLOCK$(cat CHANGES.md) > CHANGES.md
          fi
      - run: |
          mapfile -d ',' -t removed_files < <(printf '%s,' '${{ steps.files.outputs.removed }}')
          for removed_file in "${removed_files[@]}"; do
            if [ ! -z "$removed_file" ]
            then
              echo "- Removed ${removed_file}" >> CHANGES.md
            fi
          done
      - run: |
          mapfile -d ',' -t renamed_files < <(printf '%s,' '${{ steps.files.outputs.renamed }}')
          for renamed_file in "${renamed_files[@]}"; do
            if [ ! -z "$renamed_file" ]
            then
              echo "- Renamed ${renamed_file}" >> CHANGES.md
            fi
          done
      - run: |
          mapfile -d ',' -t modified_files < <(printf '%s,' '${{ steps.files.outputs.modified }}')
          for modified_file in "${modified_files[@]}"; do
            if [ ! -z "$modified_file" ]
            then
              echo "- Modified ${modified_file}" >> CHANGES.md
            fi
          done


      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git add . 
          git commit -m "Adding Go models from Avro schema by bot"
          git tag -m "Version ${{ steps.tag_version.outputs.number }}" -a v${{ steps.tag_version.outputs.number }}

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          tags: true
